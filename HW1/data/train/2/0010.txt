class Solution {
public:
    bool func(string &s , string &p , int i , int j , vector<vector<int>>&dp){
        if(i<0 && j<0) return true;
        if(i>=0 && j<0) return false;
        if(i<0 && j>=0){
            for(;j>=0;j--)
                 if(p[j]!='*') return false;
            return true;
        }
        if(dp[i][j]!=-1) return dp[i][j];
        if(p[j]=='?' || s[i]==p[j])
            return dp[i][j] = func(s , p , i-1 , j-1 , dp);
        else if(p[j]=='*')
            return dp[i][j] = func(s , p , i-1 , j , dp) || func(s , p , i , j-1 , dp);
        return dp[i][j] = false;
    }

    bool isMatch(string s, string p) {
        int m = s.length();
        int n = p.length();
        vector<vector<int>>dp(m+1 , vector<int>(n+1, 0));
        dp[0][0] = 1;
        bool comp = true;
        for(int j = 1;j<=n;j++){
            if(p[j-1]!='*'){
                comp = false;
            }
            dp[0][j] = comp;
        }

        for(int i = 1; i<=m ; i++){
            for(int j = 1; j<=n ; j++){
                if(p[j-1]=='?' || s[i-1]==p[j-1])
                    dp[i][j] = dp[i-1][j-1];
                else if(p[j-1]=='*')
                    dp[i][j] = dp[i-1][j] || dp[i][j-1];
                else  dp[i][j] = false;
            }
        }
        return dp[m][n];
    }
};