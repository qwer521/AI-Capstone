/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    pair<int,int> func(TreeNode*root , int *ans){
        if(root==NULL){
            return {0 , 0};
        }
        pair<int,int>le = func(root->left , ans);
        pair<int,int>ri = func(root->right , ans);

        int sum = le.first + ri.first+root->val;
        int m = le.second + ri.second + 1;
        if(sum/m==root->val)
        *ans = *ans +1;

        return {sum , m};
    }

    int averageOfSubtree(TreeNode* root) {
        int ans = 0;
        pair<int,int>p =  func(root , &ans);
        return ans;
    }
};