class Solution {
public:
    bool validateBinaryTreeNodes(int n, vector<int>& leftChild, vector<int>& rightChild) {
        vector<int>parent(n,-1);
        vector<bool>visited(n, false);

        for(int i=0;i<n;i++){
           if(leftChild[i]!=-1){
                if(visited[leftChild[i]]==1) return false;
                visited[leftChild[i]] = 1;
                parent[leftChild[i]] = i;
           }
           if(rightChild[i]!=-1){
               if(visited[rightChild[i]]==1) return false;
               visited[rightChild[i]] = 1;
               parent[rightChild[i]] = i;
           }

           int currParent= parent[i];
           while(currParent!=-1){
               if(currParent == leftChild[i] or currParent == rightChild[i]){
                   return false;
               }
               currParent = parent[currParent];
           }
        }
        int root = 0;
        for(int i=0;i<n;i++){
            if(parent[i]==-1) root+=1;
        }
        return root==1;
    }
};