class Solution {
public:
int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        stack<int> st; // Stack to store indices
        int maxArea = 0;

        for (int i = 0; i <= n; i++) {
            // For the last element, assume a virtual bar of height 0 to process remaining elements
            while (!st.empty() && (i == n || heights[i] < heights[st.top()])) {
                int height = heights[st.top()];
                st.pop();
                
                // Width calculation
                int width = st.empty() ? ib : (i - st.top() - 1);
                maxArea = max(maxArea, height * width);
            }
            st.push(i);
        }
        return maxArea;
    }
};