class Solution {
public:
    int t[100001];
    long long numberOfPairs(vector<int>& nums1, vector<int>& nums2, int diff) {
        vector<int> v;
        for(int i=0;i<nums1.size();i++){
            v.push_back(nums2[i]-nums1[i]);
        }
        long long int sum=0;
        reverse(v.begin(),v.end());
        return merge(v,0,nums1.size()-1,diff);
    }
    long long merge(vector<int>& v,int l,int r,int d){
        if(r==l)return 0;
        int m=(l+r)/2;
        int pl=l,pr=m+1;
        long long cnt=merge(v,l,m,d)+merge(v,m+1,r,d);
        while(pl<=m && pr<=r){
            if(v[pl]<=v[pr]+d){
                cnt+=m-pl+1;
                pr++;
            }
            else pl++;
        }
        sort(v.begin()+l,v.begin()+r+1);
        reverse(v.begin()+l,v.begin()+r+1);
        return cnt;
    }
};