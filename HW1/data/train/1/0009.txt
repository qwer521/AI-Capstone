class Solution {
public:
    int used[10]{0};
    string s="";
    string smallestNumber(string pattern) {
        for(int i=0;i<pattern.size()+1;i++)s+="0";
        f(pattern,s,0);
        return s;
    }
    int f(string p,string& s,int n){
        if(n==s.size()){
            return 1;
        }
        int l=1,r=10;
        if(n>0&&p[n-1]=='I'){
            l=int(s[n-1]-'0')+1;
        }
        else if(n>0&&p[n-1]=='D'){
            r=int(s[n-1]-'0')+1;
        }
        // cout<<n<<" "<<l<<" "<<r<<"\n";
        for(int i=l;i<r;i++){
            if(used[i])continue;
            s[n]=(char)(i+'0');
            // cout<<s<<"\n";
            used[i]=1;
            if(f(p,s,n+1))return 1;
            used[i]=0;
        }
        return 0;
    }
};