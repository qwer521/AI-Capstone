class Solution {
public:
    int lenLongestFibSubseq(vector<int>& arr) {
        int n = arr.size(), ans = 0;
        unordered_map<int, int> index;
        for (int i = 0; i < n; i++) index[arr[i]] = i;
        vector<vector<int>> dp(n, vector<int>(n, 2));
        for (int i = 0; i < n; i++){
            for (int j = i + 1; j < n; j++){
                int needed = arr[j] - arr[i];
                if (index.find(needed) != index.end() && index[needed] < i){
                    dp[i][j] = dp[index[needed]][i] + 1;
                    ans = max(ans, dp[i][j]);
                }
            }
        }
        return ans >= 3 ? ans : 0;
    }
};
