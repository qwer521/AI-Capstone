class Solution {
public:
    vector<long long> findMaxSum(vector<int>& nums1, vector<int>& nums2, int k) {
        vector<pair<long long,pair<long long,long long>>> p;
        for(int i=0;i<nums1.size();i++){
            p.push_back({nums1[i],{nums2[i],i}});
        }
        sort(p.begin(),p.end());
        vector<long long> ans(nums1.size(),0);
        priority_queue<long long,vector<long long> , greater<long long>> pq;
        long long m=p[0].second.first,last=0;
        pq.push(p[0].second.first);
        for(int i=1;i<p.size();i++){
            if(p[i].first>p[i-1].first){
                ans[p[i].second.second]=m;
                last=m;
            }
            else {
                ans[p[i].second.second]=last;
            }
            pq.push(p[i].second.first);
            m+=p[i].second.first;
            if(pq.size()>k){
                m-=pq.top();
                pq.pop();
            }
        }
        return ans;
    }
};